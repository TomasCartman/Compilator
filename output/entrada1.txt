< keyword, var >
< keyword, string >
< identifier, name >
< relationalOperator, = >
< string, "name" >
< relationalOperator, != >
< relationalOperator, > >
< relationalOperator, > >
< logicalOperator, || >
< logicalOperator, && >
< logicalOperator, ! >
< logicalOperator, || >
< logicalOperator, && >
< logicalOperator, ! >
< logicalOperator, ! >
< logicalOperator, ! >
< logicalOperator, ! >
< logicalOperator, ! >
< keyword, var >
< keyword, real >
< identifier, xc >
< relationalOperator, = >
< number, 1.111 >
< keyword, var >
< keyword, real >
< identifier, hs >
< relationalOperator, = >
< number, 2.03823 >
< keyword, var >
< keyword, real >
< identifier, ty >
< relationalOperator, = >
< number, 0 >
< delimiter, . >
< keyword, var >
< keyword, real >
< identifier, tu >
< relationalOperator, = >
< number, 0 >
< delimiter, . >
< number, 1 >
< keyword, var >
< keyword, real >
< identifier, nvv >
< relationalOperator, = >
< number, 2 >
< delimiter, . >
< number, 1 >
< keyword, var >
< keyword, int >
< identifier, i >
< relationalOperator, = >
< number, 0 >
< delimiter, ; >
< keyword, var >
< keyword, int >
< identifier, c >
< relationalOperator, = >
< number, 1 >
< delimiter, ; >
< keyword, var >
< keyword, int >
< identifier, a >
< relationalOperator, = >
< identifier, c >
< arithmeticOperator, + >
< number, 1 >
< delimiter, ; >
< keyword, var >
< keyword, boolean >
< identifier, isValid >
< relationalOperator, = >
< keyword, true >
< keyword, var >
< keyword, string >
< identifier, name >
< relationalOperator, = >
< string, "name" >
< identifier, i >
< arithmeticOperator, / >
< identifier, c >
< identifier, a >
< arithmeticOperator, * >
< identifier, c >
< identifier, a >
< arithmeticOperator, * >
< identifier, i >
< identifier, a >
< relationalOperator, = >
< identifier, c >
< arithmeticOperator, / >
< identifier, a >
< keyword, if >
< delimiter, ( >
< identifier, c >
< relationalOperator, > >
< identifier, a >
< delimiter, ) >
< delimiter, { >
< keyword, print >
< delimiter, ( >
< string, "c>a" >
< delimiter, ) >
< delimiter, } >
< keyword, else >
< delimiter, { >
< identifier, isValid >
< relationalOperator, = >
< keyword, false >
< delimiter, } >
< identifier, c >
< relationalOperator, <= >
< identifier, a >
< delimiter, ; >
< identifier, a >
< relationalOperator, == >
< identifier, i >
< delimiter, ; >
< keyword, if >
< delimiter, ( >
< identifier, a >
< relationalOperator, > >
< identifier, b >
< logicalOperator, && >
< identifier, c >
< relationalOperator, == >
< identifier, a >
< logicalOperator, || >
< identifier, i >
< relationalOperator, < >
< identifier, a >
< delimiter, ) >
< delimiter, { >
< delimiter, } >
< keyword, else >
< keyword, if >
< delimiter, ( >
< identifier, a >
< relationalOperator, < >
< identifier, b >
< logicalOperator, && >
< identifier, c >
< relationalOperator, == >
< identifier, a >
< logicalOperator, || >
< identifier, i >
< relationalOperator, == >
< identifier, i >
< delimiter, ) >
< delimiter, { >
< delimiter, } >
< keyword, var >
< keyword, int >
< identifier, b >
< relationalOperator, = >
< number, 1 >
< identifier, b >
< arithmeticOperator, ++ >
< identifier, b >
< arithmeticOperator, -- >
< identifier, b >
< arithmeticOperator, / >
< identifier, b >
< identifier, b >
< arithmeticOperator, * >
< number, 2 >
< identifier, b >
< relationalOperator, = >
< number, 0 >
< delimiter, ; >
< identifier, h >
< relationalOperator, = >
< identifier, b >
< arithmeticOperator, + >
< number, 3 >
< delimiter, ; >
< identifier, c >
< relationalOperator, != >
< identifier, i >
< delimiter, ; >
< identifier, a >
< relationalOperator, > >
< relationalOperator, = >
< identifier, i >
< delimiter, ; >
< keyword, while >
< delimiter, ( >
< identifier, a >
< relationalOperator, >= >
< identifier, b >
< logicalOperator, && >
< identifier, h >
< relationalOperator, < >
< identifier, c >
< logicalOperator, || >
< identifier, c >
< relationalOperator, == >
< identifier, a >
< logicalOperator, || >
< identifier, i >
< relationalOperator, != >
< identifier, c >
< delimiter, ) >
< delimiter, { >
< identifier, z >
< relationalOperator, = >
< identifier, b >
< delimiter, ; >
< identifier, b >
< relationalOperator, > >
< relationalOperator, > >
< identifier, a >
< delimiter, ; >
< identifier, h >
< relationalOperator, <= >
< identifier, a >
< delimiter, ; >
< delimiter, } >
